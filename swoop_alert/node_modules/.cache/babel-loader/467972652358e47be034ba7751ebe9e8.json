{"ast":null,"code":"var _jsxFileName = \"/home/apollo/Workspace/swoop_alert/src/components/Map.js\";\nimport React from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nconst _require = require(\"react-google-maps/lib/components/addons/MarkerClusterer\"),\n      MarkerClusterer = _require.MarkerClusterer;\n\nconst handleCenterChanged = () => {\n  const center = this.refs.map.getCenter();\n\n  if (!center.equals(this.state.center)) {\n    this.setState({\n      center\n    });\n  }\n};\n\nconst Map = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  ref: \"map\",\n  defaultZoom: 12,\n  center: {\n    lat: props.startLoc.lat,\n    lng: props.startLoc.lng\n  },\n  onClick: props.handleClickedMap,\n  onCenterChanged: e => {\n    handleCenterChanged;\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(MarkerClusterer, {\n  averageCenter: true,\n  enableRetinaIcons: true,\n  gridSize: 15,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, props.isMarkerShown && props.markers.map(marker => React.createElement(Marker, {\n  position: {\n    lat: marker.latitude,\n    lng: marker.longtitude\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}))))));\nexport default Map; //defaultCenter = {{ lat: -34.397, lng: 150.644 }}\n\n/*\n defaultCenter={{\n        lat: props.startLoc.lat,\n        lng: props.startLoc.lng\n      }}\n\n      */","map":{"version":3,"sources":["/home/apollo/Workspace/swoop_alert/src/components/Map.js"],"names":["React","withScriptjs","withGoogleMap","GoogleMap","Marker","require","MarkerClusterer","handleCenterChanged","center","refs","map","getCenter","equals","state","setState","Map","props","lat","startLoc","lng","handleClickedMap","e","isMarkerShown","markers","marker","latitude","longtitude"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,mBALP;;iBAQIC,OAAO,CAAC,yDAAD,C;MADTC,e,YAAAA,e;;AAGF,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUC,GAAV,CAAcC,SAAd,EAAf;;AACA,MAAI,CAACH,MAAM,CAACI,MAAP,CAAc,KAAKC,KAAL,CAAWL,MAAzB,CAAL,EAAuC;AACrC,SAAKM,QAAL,CAAc;AAAEN,MAAAA;AAAF,KAAd;AACD;AACF,CALD;;AAOA,MAAMO,GAAG,GAAGd,YAAY,CACtBC,aAAa,CAACc,KAAK,IACjB,oBAAC,SAAD;AACE,EAAA,GAAG,EAAC,KADN;AAEE,EAAA,WAAW,EAAE,EAFf;AAGE,EAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAED,KAAK,CAACE,QAAN,CAAeD,GADd;AAENE,IAAAA,GAAG,EAAEH,KAAK,CAACE,QAAN,CAAeC;AAFd,GAHV;AAOE,EAAA,OAAO,EAAEH,KAAK,CAACI,gBAPjB;AAQE,EAAA,eAAe,EAAEC,CAAC,IAAI;AACpBd,IAAAA,mBAAmB;AACpB,GAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAYE,oBAAC,eAAD;AAAiB,EAAA,aAAa,MAA9B;AAA+B,EAAA,iBAAiB,MAAhD;AAAiD,EAAA,QAAQ,EAAE,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGS,KAAK,CAACM,aAAN,IACCN,KAAK,CAACO,OAAN,CAAcb,GAAd,CAAkBc,MAAM,IACtB,oBAAC,MAAD;AACE,EAAA,QAAQ,EAAE;AACRP,IAAAA,GAAG,EAAEO,MAAM,CAACC,QADJ;AAERN,IAAAA,GAAG,EAAEK,MAAM,CAACE;AAFJ,GADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFJ,CAZF,CADW,CADS,CAAxB;AA6BA,eAAeX,GAAf,C,CAEA;;AACA","sourcesContent":["import React from \"react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nconst {\n  MarkerClusterer\n} = require(\"react-google-maps/lib/components/addons/MarkerClusterer\");\n\nconst handleCenterChanged = () => {\n  const center = this.refs.map.getCenter();\n  if (!center.equals(this.state.center)) {\n    this.setState({ center });\n  }\n};\n\nconst Map = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      ref=\"map\"\n      defaultZoom={12}\n      center={{\n        lat: props.startLoc.lat,\n        lng: props.startLoc.lng\n      }}\n      onClick={props.handleClickedMap}\n      onCenterChanged={e => {\n        handleCenterChanged;\n      }}\n    >\n      <MarkerClusterer averageCenter enableRetinaIcons gridSize={15}>\n        {props.isMarkerShown &&\n          props.markers.map(marker => (\n            <Marker\n              position={{\n                lat: marker.latitude,\n                lng: marker.longtitude\n              }}\n            />\n          ))}\n      </MarkerClusterer>\n    </GoogleMap>\n  ))\n);\n\nexport default Map;\n\n//defaultCenter = {{ lat: -34.397, lng: 150.644 }}\n/*\n defaultCenter={{\n        lat: props.startLoc.lat,\n        lng: props.startLoc.lng\n      }}\n\n      */\n"]},"metadata":{},"sourceType":"module"}