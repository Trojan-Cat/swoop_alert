{"ast":null,"code":"import _slicedToArray from \"/home/apollo/Workspace/swoop_alert/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/apollo/Workspace/swoop_alert/src/components/Map.js\";\nimport React, { useState } from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nconst handleClickedMap = e => {\n  let latitude = e.latLng.lat();\n  let longtitude = e.latLng.lat();\n  console.log(latitude, longtitude);\n};\n\nconst _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarker = _useState2[1];\n\nconst Map = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  defaultCenter: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  onClick: handleClickedMap,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.markers.lat, props.isMarkerShown && props.markers.map(marker => React.createElement(Marker, {\n  position: {\n    lat: marker.lat,\n    lng: marker.lng\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n})))));\nexport default Map;","map":{"version":3,"sources":["/home/apollo/Workspace/swoop_alert/src/components/Map.js"],"names":["React","useState","withScriptjs","withGoogleMap","GoogleMap","Marker","handleClickedMap","e","latitude","latLng","lat","longtitude","console","log","markers","setMarker","Map","props","lng","isMarkerShown","map","marker"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,mBALP;;AAOA,MAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC5B,MAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,GAAT,EAAf;AACA,MAAIC,UAAU,GAAGJ,CAAC,CAACE,MAAF,CAASC,GAAT,EAAjB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBG,UAAtB;AACD,CAJD;;kBAM6BV,QAAQ,CAAC,EAAD,C;;MAA9Ba,O;MAASC,S;;AAEhB,MAAMC,GAAG,GAAGd,YAAY,CACtBC,aAAa,CAACc,KAAK,IACjB,oBAAC,SAAD;AACE,EAAA,WAAW,EAAE,CADf;AAEE,EAAA,aAAa,EAAE;AAAEP,IAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBQ,IAAAA,GAAG,EAAE;AAArB,GAFjB;AAGE,EAAA,OAAO,EAAEZ,gBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKGW,KAAK,CAACH,OAAN,CAAcJ,GALjB,EAMGO,KAAK,CAACE,aAAN,IACCF,KAAK,CAACH,OAAN,CAAcM,GAAd,CAAkBC,MAAM,IACtB,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAE;AAAEX,IAAAA,GAAG,EAAEW,MAAM,CAACX,GAAd;AAAmBQ,IAAAA,GAAG,EAAEG,MAAM,CAACH;AAA/B,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAPJ,CADW,CADS,CAAxB;AAgBA,eAAeF,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\nconst handleClickedMap = e => {\n  let latitude = e.latLng.lat();\n  let longtitude = e.latLng.lat();\n  console.log(latitude, longtitude);\n};\n\nconst [markers, setMarker] = useState(\"\");\n\nconst Map = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={8}\n      defaultCenter={{ lat: -34.397, lng: 150.644 }}\n      onClick={handleClickedMap}\n    >\n      {props.markers.lat}\n      {props.isMarkerShown &&\n        props.markers.map(marker => (\n          <Marker position={{ lat: marker.lat, lng: marker.lng }} />\n        ))}\n    </GoogleMap>\n  ))\n);\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}