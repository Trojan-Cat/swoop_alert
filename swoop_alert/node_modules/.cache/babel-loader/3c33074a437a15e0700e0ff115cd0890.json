{"ast":null,"code":"var _jsxFileName = \"/home/apollo/Workspace/swoop_alert/src/components/Map.js\";\nimport React from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nconst _require = require(\"react-google-maps/lib/components/addons/MarkerClusterer\"),\n      MarkerClusterer = _require.MarkerClusterer;\n\nconst onBoundsChanged = () => {//console.log(e);\n  //const center = this.refs.map.getCenter();\n\n  /* if (!center.equals(this.state.center)) {\n     this.setState({ center });\n   }\n   */\n};\n\nconst Map = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  ref: ref.map,\n  defaultZoom: 12,\n  center: {\n    lat: props.startLoc.lat,\n    lng: props.startLoc.lng\n  },\n  onBoundsChanged: onBoundsChanged,\n  onClick: props.handleClickedMap,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(MarkerClusterer, {\n  averageCenter: true,\n  enableRetinaIcons: true,\n  gridSize: 15,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, props.isMarkerShown && props.markers.map(marker => React.createElement(Marker, {\n  position: {\n    lat: marker.latitude,\n    lng: marker.longtitude\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}))))));\nexport default Map; //defaultCenter = {{ lat: -34.397, lng: 150.644 }}\n\n/*\n defaultCenter={{\n        lat: props.startLoc.lat,\n        lng: props.startLoc.lng\n      }}\n\n      */","map":{"version":3,"sources":["/home/apollo/Workspace/swoop_alert/src/components/Map.js"],"names":["React","withScriptjs","withGoogleMap","GoogleMap","Marker","require","MarkerClusterer","onBoundsChanged","Map","props","ref","map","lat","startLoc","lng","handleClickedMap","isMarkerShown","markers","marker","latitude","longtitude"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,mBALP;;iBAQIC,OAAO,CAAC,yDAAD,C;MADTC,e,YAAAA,e;;AAGF,MAAMC,eAAe,GAAG,MAAM,CAC5B;AACA;;AACA;;;;AAID,CAPD;;AASA,MAAMC,GAAG,GAAGP,YAAY,CACtBC,aAAa,CAACO,KAAK,IACjB,oBAAC,SAAD;AACE,EAAA,GAAG,EAAEC,GAAG,CAACC,GADX;AAEE,EAAA,WAAW,EAAE,EAFf;AAGE,EAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAEH,KAAK,CAACI,QAAN,CAAeD,GADd;AAENE,IAAAA,GAAG,EAAEL,KAAK,CAACI,QAAN,CAAeC;AAFd,GAHV;AAOE,EAAA,eAAe,EAAEP,eAPnB;AAQE,EAAA,OAAO,EAAEE,KAAK,CAACM,gBARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAUE,oBAAC,eAAD;AAAiB,EAAA,aAAa,MAA9B;AAA+B,EAAA,iBAAiB,MAAhD;AAAiD,EAAA,QAAQ,EAAE,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGN,KAAK,CAACO,aAAN,IACCP,KAAK,CAACQ,OAAN,CAAcN,GAAd,CAAkBO,MAAM,IACtB,oBAAC,MAAD;AACE,EAAA,QAAQ,EAAE;AACRN,IAAAA,GAAG,EAAEM,MAAM,CAACC,QADJ;AAERL,IAAAA,GAAG,EAAEI,MAAM,CAACE;AAFJ,GADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFJ,CAVF,CADW,CADS,CAAxB;AA2BA,eAAeZ,GAAf,C,CAEA;;AACA","sourcesContent":["import React from \"react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nconst {\n  MarkerClusterer\n} = require(\"react-google-maps/lib/components/addons/MarkerClusterer\");\n\nconst onBoundsChanged = () => {\n  //console.log(e);\n  //const center = this.refs.map.getCenter();\n  /* if (!center.equals(this.state.center)) {\n     this.setState({ center });\n   }\n   */\n};\n\nconst Map = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      ref={ref.map}\n      defaultZoom={12}\n      center={{\n        lat: props.startLoc.lat,\n        lng: props.startLoc.lng\n      }}\n      onBoundsChanged={onBoundsChanged}\n      onClick={props.handleClickedMap}\n    >\n      <MarkerClusterer averageCenter enableRetinaIcons gridSize={15}>\n        {props.isMarkerShown &&\n          props.markers.map(marker => (\n            <Marker\n              position={{\n                lat: marker.latitude,\n                lng: marker.longtitude\n              }}\n            />\n          ))}\n      </MarkerClusterer>\n    </GoogleMap>\n  ))\n);\n\nexport default Map;\n\n//defaultCenter = {{ lat: -34.397, lng: 150.644 }}\n/*\n defaultCenter={{\n        lat: props.startLoc.lat,\n        lng: props.startLoc.lng\n      }}\n\n      */\n"]},"metadata":{},"sourceType":"module"}