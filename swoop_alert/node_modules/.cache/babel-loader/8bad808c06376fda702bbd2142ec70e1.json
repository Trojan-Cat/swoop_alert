{"ast":null,"code":"import _slicedToArray from \"/home/apollo/Workspace/swoop_alert/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/apollo/Workspace/swoop_alert/src/components/Map.js\";\nimport React, { useState } from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nconst _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarker = _useState2[1];\n\nconst handleClickedMap = e => {\n  let latitude = e.latLng.lat();\n  let longtitude = e.latLng.lat();\n  console.log(latitude, longtitude);\n  /*\n  setMarker({\n  ...markers,\n  newMarkers: { latitude: latitude, longtitude: longtitude }\n  });\n  */\n\n  console.log(markers);\n};\n\nconst Map = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  defaultCenter: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  onClick: this.handleClickedMap,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, props.markers.lat, props.isMarkerShown && props.markers.map(marker => React.createElement(Marker, {\n  position: {\n    lat: marker.lat,\n    lng: marker.lng\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n})))));\nexport default Map;","map":{"version":3,"sources":["/home/apollo/Workspace/swoop_alert/src/components/Map.js"],"names":["React","useState","withScriptjs","withGoogleMap","GoogleMap","Marker","markers","setMarker","handleClickedMap","e","latitude","latLng","lat","longtitude","console","log","Map","props","lng","isMarkerShown","map","marker"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,MAJJ,QAKO,mBALP;;kBAO6BJ,QAAQ,CAAC,EAAD,C;;MAA9BK,O;MAASC,S;;AAEhB,MAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC1B,MAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,GAAT,EAAf;AACA,MAAIC,UAAU,GAAGJ,CAAC,CAACE,MAAF,CAASC,GAAT,EAAjB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBG,UAAtB;AACA;;;;;;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACH,CAXD;;AAaA,MAAMU,GAAG,GAAGd,YAAY,CACpBC,aAAa,CAACc,KAAK,IACf,oBAAC,SAAD;AACI,EAAA,WAAW,EAAE,CADjB;AAEI,EAAA,aAAa,EAAE;AAAEL,IAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBM,IAAAA,GAAG,EAAE;AAArB,GAFnB;AAGI,EAAA,OAAO,EAAE,KAAKV,gBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKKS,KAAK,CAACX,OAAN,CAAcM,GALnB,EAMKK,KAAK,CAACE,aAAN,IACGF,KAAK,CAACX,OAAN,CAAcc,GAAd,CAAkBC,MAAM,IACpB,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAE;AAAET,IAAAA,GAAG,EAAES,MAAM,CAACT,GAAd;AAAmBM,IAAAA,GAAG,EAAEG,MAAM,CAACH;AAA/B,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAPR,CADS,CADO,CAAxB;AAgBA,eAAeF,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker\n} from \"react-google-maps\";\n\nconst [markers, setMarker] = useState(\"\");\n\nconst handleClickedMap = e => {\n    let latitude = e.latLng.lat();\n    let longtitude = e.latLng.lat();\n    console.log(latitude, longtitude);\n    /*\n  setMarker({\n    ...markers,\n    newMarkers: { latitude: latitude, longtitude: longtitude }\n  });\n  */\n    console.log(markers);\n};\n\nconst Map = withScriptjs(\n    withGoogleMap(props => (\n        <GoogleMap\n            defaultZoom={8}\n            defaultCenter={{ lat: -34.397, lng: 150.644 }}\n            onClick={this.handleClickedMap}\n        >\n            {props.markers.lat}\n            {props.isMarkerShown &&\n                props.markers.map(marker => (\n                    <Marker position={{ lat: marker.lat, lng: marker.lng }} />\n                ))}\n        </GoogleMap>\n    ))\n);\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}