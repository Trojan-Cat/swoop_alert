{"ast":null,"code":"var _jsxFileName = \"/home/apollo/Workspace/swoop_alert/src/components/Map.js\";\nimport React from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nconst _require = require(\"react-google-maps/lib/components/addons/MarkerClusterer\"),\n      MarkerClusterer = _require.MarkerClusterer;\n\nconst onDragEndGetCoords = props => {\n  console.log(props);\n  /* const { latLng } = coord;\n   const lat = latLng.lat();\n   const lng = latLng.lng();\n     console.log(`The lat is now : ${lat}, and the lng is now: ${lng}`);\n   */\n};\n\nconst Map = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  defaultZoom: 12,\n  center: {\n    lat: props.startLoc.lat,\n    lng: props.startLoc.lng\n  },\n  onDragend: onDragEndGetCoords,\n  onClick: props.handleClickedMap,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(MarkerClusterer, {\n  averageCenter: true,\n  enableRetinaIcons: true,\n  gridSize: 15,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, props.isMarkerShown && props.markers.map(marker => React.createElement(Marker, {\n  position: {\n    lat: marker.latitude,\n    lng: marker.longtitude\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}))))));\nexport default Map; //defaultCenter = {{ lat: -34.397, lng: 150.644 }}\n\n/*\n defaultCenter={{\n        lat: props.startLoc.lat,\n        lng: props.startLoc.lng\n      }}\n\n      */","map":{"version":3,"sources":["/home/apollo/Workspace/swoop_alert/src/components/Map.js"],"names":["React","withScriptjs","withGoogleMap","GoogleMap","Marker","require","MarkerClusterer","onDragEndGetCoords","props","console","log","Map","lat","startLoc","lng","handleClickedMap","isMarkerShown","markers","map","marker","latitude","longtitude"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,mBALP;;iBAQIC,OAAO,CAAC,yDAAD,C;MADTC,e,YAAAA,e;;AAGF,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;;;;;AAMD,CARD;;AAUA,MAAMG,GAAG,GAAGV,YAAY,CACtBC,aAAa,CAACM,KAAK,IACjB,oBAAC,SAAD;AACE,EAAA,WAAW,EAAE,EADf;AAEE,EAAA,MAAM,EAAE;AACNI,IAAAA,GAAG,EAAEJ,KAAK,CAACK,QAAN,CAAeD,GADd;AAENE,IAAAA,GAAG,EAAEN,KAAK,CAACK,QAAN,CAAeC;AAFd,GAFV;AAME,EAAA,SAAS,EAAEP,kBANb;AAOE,EAAA,OAAO,EAAEC,KAAK,CAACO,gBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASE,oBAAC,eAAD;AAAiB,EAAA,aAAa,MAA9B;AAA+B,EAAA,iBAAiB,MAAhD;AAAiD,EAAA,QAAQ,EAAE,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGP,KAAK,CAACQ,aAAN,IACCR,KAAK,CAACS,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IACtB,oBAAC,MAAD;AACE,EAAA,QAAQ,EAAE;AACRP,IAAAA,GAAG,EAAEO,MAAM,CAACC,QADJ;AAERN,IAAAA,GAAG,EAAEK,MAAM,CAACE;AAFJ,GADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFJ,CATF,CADW,CADS,CAAxB;AA0BA,eAAeV,GAAf,C,CAEA;;AACA","sourcesContent":["import React from \"react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nconst {\n  MarkerClusterer\n} = require(\"react-google-maps/lib/components/addons/MarkerClusterer\");\n\nconst onDragEndGetCoords = props => {\n  console.log(props);\n  /* const { latLng } = coord;\n   const lat = latLng.lat();\n   const lng = latLng.lng();\n \n   console.log(`The lat is now : ${lat}, and the lng is now: ${lng}`);\n   */\n};\n\nconst Map = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={12}\n      center={{\n        lat: props.startLoc.lat,\n        lng: props.startLoc.lng\n      }}\n      onDragend={onDragEndGetCoords}\n      onClick={props.handleClickedMap}\n    >\n      <MarkerClusterer averageCenter enableRetinaIcons gridSize={15}>\n        {props.isMarkerShown &&\n          props.markers.map(marker => (\n            <Marker\n              position={{\n                lat: marker.latitude,\n                lng: marker.longtitude\n              }}\n            />\n          ))}\n      </MarkerClusterer>\n    </GoogleMap>\n  ))\n);\n\nexport default Map;\n\n//defaultCenter = {{ lat: -34.397, lng: 150.644 }}\n/*\n defaultCenter={{\n        lat: props.startLoc.lat,\n        lng: props.startLoc.lng\n      }}\n\n      */\n"]},"metadata":{},"sourceType":"module"}